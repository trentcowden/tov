import * as React from 'react'
import { DimensionValue, View, ViewStyle } from 'react-native'
import Svg, { G, NumberProp, Path } from 'react-native-svg'
import { colors } from '../constants'

export type IconName =
  | 'history'
  | 'search'
  | 'references'
  | 'forwardReference'
  | 'backReference'
  | 'arrowLeft'
  | 'scroll'
  | 'book'
  | 'location'

interface ParentProps {
  name: IconName
  size: NumberProp | undefined
  // color?: string
  style?: ViewStyle
}

interface ChildProps {
  name: IconName
  width: NumberProp | undefined
  height: NumberProp | undefined
  // fill?: string
  color?: string
}

function exhaustiveMatchingGuard(_: never): never {
  throw new Error('Should not have reached here.')
}

/**
 * This acts as a wrapper around the <SVGComponent />. For some reason, SVGs not
 * wrapped in a view will scale down as their available space runs out. Wrapping
 * it in a view of the same size removes this issue.
 */
export default function TovIcon({ name, size, color, style }: ParentProps) {
  return (
    <View
      style={{
        width: size as DimensionValue,
        height: size as DimensionValue,
        ...style,
      }}
    >
      <SVGComponent
        height={size}
        width={size}
        name={name}
        // fill={color}
        color={color}
      />
    </View>
  )
}

function SVGComponent(props: ChildProps) {
  // For regular icons, make sure to remove any hard-coded fill colors in order to fill with the prop color.
  switch (props.name) {
    case 'location':
      return (
        <Svg fill="none" viewBox="0 0 14 14" {...props}>
          <G fillRule="evenodd" clipRule="evenodd" strokeWidth={1}>
            <Path
              fill={colors.p1}
              d="M6.937 0c-3.131 0-5.7 2.517-5.92 5.725-.103 1.499.217 3.087 1.154 4.37 1.054 1.441 2.131 2.431 3.78 3.575.634.44 1.464.44 2.097 0 1.65-1.144 2.726-2.134 3.78-3.575.938-1.283 1.257-2.871 1.154-4.37C12.762 2.517 10.194 0 7.062 0h-.125z"
            />
            <Path
              fill={colors.p2}
              d="M7 4.3c-.582 0-1.071.164-1.415.508s-.509.834-.509 1.415c0 .582.165 1.072.509 1.416s.833.508 1.415.508c.581 0 1.071-.164 1.415-.508s.508-.834.508-1.416c0-.581-.164-1.07-.508-1.415S7.58 4.3 7 4.3z"
            />
          </G>
        </Svg>
      )
    case 'book':
      return (
        <Svg fill="none" viewBox="0 0 14 14" {...props}>
          <G strokeWidth={1}>
            <Path
              fill={colors.p2}
              d="M12.369 10.335c-.656.242-1.159.718-1.159 1.481s.503 1.24 1.158 1.482a1.94 1.94 0 01-.791.195c-2.8.099-5.566.099-8.366 0-1.018-.036-1.586-.77-1.586-1.677 0-.905.568-1.64 1.586-1.676 2.8-.099 5.566-.099 8.366 0 .286.01.56.08.792.195z"
            />
            <Path
              fill={colors.p1}
              fillRule="evenodd"
              d="M3.657.234c2.275-.31 4.42-.31 6.695 0 1.273.173 2.3 1.17 2.42 2.432.237 2.512.317 4.986.106 7.515a.503.503 0 01-.01.069c-.017.613-.84.605-1.206.601h-.068l-.319-.002c-1.27-.007-5.844-.033-8.038.044-.325.011-.522.127-.642.262-.128.143-.22.364-.22.661s.092.52.22.662c.12.135.317.25.642.262 2.194.077 6.767.05 8.038.044l.32-.002h.067c.37-.004 1.206-.012 1.206.62 0 .616-.774.602-1.17.595l-.104-.002h-8.4c-.633-.022-1.162-.266-1.53-.678-.363-.408-.539-.943-.539-1.5 0-.028 0-.056.002-.083C.937 8.699.95 5.7 1.238 2.666 1.358 1.403 2.384.407 3.658.234z"
              clipRule="evenodd"
            />
          </G>
        </Svg>
      )
    case 'scroll':
      return (
        <Svg fill="none" viewBox="0 0 14 14" {...props}>
          <G fillRule="evenodd" clipRule="evenodd" strokeWidth={1}>
            <Path
              fill={colors.p2}
              d="M9 7c0-.572-.162-1.09-.536-1.463C8.09 5.163 7.572 5 7 5s-1.09.163-1.464.537C5.162 5.91 5 6.428 5 7c0 .572.162 1.09.536 1.464C5.91 8.838 6.428 9 7 9s1.09-.162 1.464-.536C8.838 8.09 9 7.572 9 7z"
            />
            <Path
              fill={colors.p1}
              d="M3.964 4.477c-.633.154-1.243-.516-.884-1.152.81-1.437 1.707-2.322 3.16-3.128a1.566 1.566 0 011.52 0c1.453.806 2.35 1.691 3.16 3.128.36.636-.25 1.306-.884 1.152-.772-.186-2.05-.452-3.036-.452-.985 0-2.264.266-3.036.452zm-.884 6.198c-.359-.636.25-1.305.884-1.152.772.187 2.05.452 3.036.452.986 0 2.264-.265 3.036-.452.633-.153 1.243.516.884 1.152-.81 1.437-1.707 2.322-3.16 3.128a1.565 1.565 0 01-1.52 0c-1.453-.806-2.35-1.691-3.16-3.128z"
            />
          </G>
        </Svg>
      )
    case 'arrowLeft':
      return (
        <Svg fill="none" viewBox="0 0 14 14" {...props}>
          <Path
            fill={colors.p1}
            fillRule="evenodd"
            d="M.504 8.473a2.418 2.418 0 01.005-2.962c.963-1.238 1.977-2.373 3.17-3.153a1.786 1.786 0 012.107.065c.564.427.913 1.163.84 1.97-.01.114-.021.229-.034.343a27.116 27.116 0 015.437-.005c.942.094 1.86.773 1.952 1.834.025.294.025.585 0 .88-.092 1.06-1.01 1.74-1.952 1.833-1.825.181-3.621.18-5.446-.005.013.114.024.228.033.343.069.807-.283 1.542-.849 1.966a1.785 1.785 0 01-2.108.055C2.471 10.85 1.462 9.713.504 8.473z"
            clipRule="evenodd"
            strokeWidth={1}
          />
        </Svg>
      )
    case 'forwardReference':
      return (
        <Svg viewBox="0 0 194 194" fill="none" {...props}>
          <Path
            d="M26.439 76.472c-1.862-6.95-9.005-11.074-15.955-9.212-6.95 1.862-11.073 9.005-9.211 15.955 13.034 48.645 63.036 77.514 111.682 64.479 23.01-6.165 41.602-20.617 53.413-39.255a107.077 107.077 0 009.666 2.975c4.613 1.178 9.442.333 13.016-2.596 3.695-3.028 5.434-7.825 4.355-12.864-1.982-9.264-6.331-18.301-10.113-24.445-3.372-5.477-9.845-8.389-16.179-7.28-7.107 1.243-16.755 3.983-25.003 8.644-4.486 2.535-6.922 7.018-6.738 11.791.178 4.618 2.749 8.793 6.69 11.464l.843.565c-8.479 12.265-21.174 21.677-36.693 25.835-34.747 9.311-70.463-11.31-79.773-46.056z"
            fill={colors.p1}
          />
        </Svg>
      )
    case 'backReference':
      return (
        <Svg viewBox="0 0 194 194" fill="none" {...props}>
          <Path
            d="M51.204 96.785c8.493-12.284 21.208-21.71 36.75-25.874 34.799-9.325 70.569 11.326 79.893 46.126 1.865 6.96 9.019 11.09 15.979 9.225 6.96-1.865 11.09-9.019 9.225-15.979-13.054-48.719-63.131-77.63-111.85-64.576-23.046 6.175-41.665 20.648-53.495 39.314a106.87 106.87 0 00-9.68-2.98c-4.62-1.18-9.457-.332-13.036 2.601-3.7 3.032-5.442 7.836-4.362 12.883 1.986 9.278 6.34 18.329 10.13 24.482 3.376 5.485 9.858 8.401 16.203 7.291 7.117-1.245 16.78-3.99 25.04-8.657 4.493-2.539 6.933-7.029 6.749-11.809-.179-4.625-2.754-8.807-6.7-11.48a99.67 99.67 0 00-.846-.567z"
            fill={colors.p2}
          />
        </Svg>
      )

    case 'references':
      return (
        <Svg viewBox="0 0 14 14" fill="none" {...props}>
          <Path
            fill={colors.p1}
            d="M2 7a1 1 0 00-2 0 7 7 0 0011.74 5.15c.236.164.458.3.658.413.319.18.694.212 1.017.066a.987.987 0 00.578-.867c.037-.726-.106-1.483-.264-2.014a1.22 1.22 0 00-1.055-.86c-.552-.05-1.321-.038-2.026.143a.988.988 0 00-.734.74c-.078.347.03.707.269.984l.051.058A5 5 0 012 7z"
          />
          <Path
            fill={colors.p2}
            d="M3.765 3.187A5 5 0 0112 7a1 1 0 102 0A7 7 0 002.26 1.85a8.192 8.192 0 00-.658-.413A1.126 1.126 0 00.584 1.37a.988.988 0 00-.578.867c-.037.726.106 1.483.264 2.014a1.22 1.22 0 001.055.86c.552.05 1.322.038 2.026-.143a.988.988 0 00.734-.74 1.126 1.126 0 00-.269-.984 7.666 7.666 0 00-.05-.058z"
          />
        </Svg>
      )
    case 'history':
      return (
        <Svg viewBox="0 0 14 14" {...props}>
          <G fillRule="evenodd" clipRule="evenodd" strokeWidth={1}>
            <Path
              fill={colors.p1}
              d="M7 12.5c1.862 0 3.21-.521 4.095-1.405C11.979 10.21 12.5 8.862 12.5 7c0-1.217-.223-2.216-.625-3.009l.016.05a.75.75 0 11-1.423.474 4.237 4.237 0 010-2.522.75.75 0 01.474-.475 4.237 4.237 0 012.523 0 .75.75 0 01-.452 1.43C13.675 4.058 14 5.431 14 7c0 2.138-.604 3.914-1.845 5.155C10.915 13.396 9.138 14 7 14c-2.138 0-3.914-.604-5.155-1.845C.604 10.915 0 9.138 0 7c0-2.138.604-3.914 1.845-5.155C3.085.604 4.862 0 7 0a.75.75 0 010 1.5c-1.862 0-3.21.521-4.095 1.405C2.021 3.79 1.5 5.138 1.5 7c0 1.862.521 3.21 1.405 4.095C3.79 11.979 5.138 12.5 7 12.5z"
            />
            <Path
              fill={colors.p2}
              d="M6.274 3.901a.75.75 0 111.5 0v3.06a.75.75 0 01-.215.526L5.755 9.323a.75.75 0 11-1.07-1.052l1.589-1.617V3.901z"
            />
          </G>
        </Svg>
      )
    case 'search':
      return (
        <Svg fill="none" viewBox="0 0 14 14" {...props}>
          <G strokeWidth={1}>
            <Path
              fill={colors.p1}
              d="M6.653 12.307c3.618 0 5.654-2.036 5.654-5.654S10.27 1 6.653 1 1 3.035 1 6.653c0 3.618 2.035 5.654 5.653 5.654z"
            />
            <Path
              fill={colors.p2}
              fillRule="evenodd"
              d="M3 3c-.782.783-1.25 1.982-1.25 3.653s.468 2.87 1.25 3.653c.783.783 1.982 1.25 3.653 1.25s2.87-.467 3.653-1.25c.783-.782 1.25-1.982 1.25-3.653 0-1.67-.467-2.87-1.25-3.653-.782-.782-1.982-1.25-3.653-1.25-1.67 0-2.87.468-3.653 1.25zM1.94 1.94C3.08.8 4.706.25 6.653.25s3.575.55 4.714 1.69c1.14 1.14 1.69 2.766 1.69 4.713 0 1.54-.344 2.88-1.052 3.937l1.452 1.453a1 1 0 01-1.414 1.414l-1.453-1.452c-1.057.707-2.396 1.052-3.937 1.052-1.947 0-3.574-.55-4.713-1.69C.8 10.227.25 8.6.25 6.653S.8 3.08 1.94 1.94z"
              clipRule="evenodd"
            />
          </G>
        </Svg>
      )
    default:
      console.log(props.name)
      return exhaustiveMatchingGuard(props.name)
  }
}
